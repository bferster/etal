<!DOCTYPE html>
<head>
    <title>Zoom</title>
    <meta charset="utf-8" />
    <link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.8.1/css/bootstrap.css" />
    <link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.8.1/css/react-select.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta http-equiv="origin-trial" content="">
</head>

<body>
 <div id="xxx">   
 	<script src="https://source.zoom.us/1.8.1/lib/vendor/react.min.js"></script>
    <script src="https://source.zoom.us/1.8.1/lib/vendor/react-dom.min.js"></script>
    <script src="https://source.zoom.us/1.8.1/lib/vendor/redux.min.js"></script>
    <script src="https://source.zoom.us/1.8.1/lib/vendor/redux-thunk.min.js"></script>
    <script src="https://source.zoom.us/1.8.1/lib/vendor/jquery.min.js"></script>
    <script src="https://source.zoom.us/1.8.1/lib/vendor/lodash.min.js"></script>
    <script src="https://source.zoom.us/zoom-meeting-1.9.8.min.js"></script>
</div> 
<script>

	var API_KEY="hVg9IpPVTCOqYaelSmL-cw";
 	var v=window.location.search.substring(1).split("&");
	let meetingNumber=v[0];
	let meetingPW=v[1] ? v[1].substr(4) : ""; 
	ZoomMtg.preLoadWasm();
	ZoomMtg.prepareJssdk();

	ZoomMtg.generateSignature({
        meetingNumber: meetingNumber,
		isSupportAV: true,
		apiKey: API_KEY,
        apiSecret: v[2],
        role:0,
		success(res) { Join(res.result); },
		});
	
	window.addEventListener("unload",  ()=>{ ZoomMtg.leaveMeeting({}) });

	function Join(signature)
	{
		ZoomMtg.init({
			disableInvite: true,
			leaveUrl:"x",
			success: function () {
				ZoomMtg.join({
					meetingNumber: meetingNumber,  passWord: meetingPW,
					userName:v[3], userEmail: "",
					signature: signature, apiKey: API_KEY,
					success: function (res) { 
						let buttons=document.querySelectorAll('button'); 
						for (let b in buttons) 
							if (buttons[b].outerText == "Leave") 
								buttons[b].addEventListener("click", ()=> { window.parent.postMessage("VideoQuit") });
					}, }); },
					error: function (res) { console.log(res); },
					});
	}

</script>
</body></html>